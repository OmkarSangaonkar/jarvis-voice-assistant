Sure! Here's a basic code for binary search in JavaScript:

```javascript
function binarySearch(arr, target) {
  let left = 0;
  let right = arr.length - 1;

  while (left <= right) {
    let mid = Math.floor((left + right) / 2);
    
    if (arr[mid] === target) {
      return mid; // Return the index where the target is found
    } else if (arr[mid] < target) {
      left = mid + 1; // Continue searching on the right half
    } else {
      right = mid - 1; // Continue searching on the left half
    }
  }

  return -1; // Return -1 if target is not found
}

// Usage example
const array = [2, 5, 8, 12, 16, 23, 38, 56, 72, 91];
const target = 23;

const result = binarySearch(array, target);

if (result !== -1) {
  console.log(`Target ${target} found at index ${result}`);
} else {
  console.log(`Target ${target} not found`);
}
```

In this code, `binarySearch` is the function that performs the binary search on a given sorted array (`arr`) to find the target value (`target`). It initializes `left` and `right` pointers to the start and end indices of the array, respectively. It then iteratively calculates the middle index (`mid`) and compares the value at the `mid` index with the target.

If the target is found, it returns the index where it is found. If the target is less than the value